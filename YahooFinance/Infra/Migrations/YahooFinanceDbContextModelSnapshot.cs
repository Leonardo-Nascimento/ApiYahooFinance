// <auto-generated />
using System;
using Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infra.Migrations
{
    [DbContext(typeof(YahooFinanceDbContext))]
    partial class YahooFinanceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.TradingPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AtivoId")
                        .HasColumnType("int");

                    b.Property<long>("End")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Gmtoffset")
                        .HasColumnType("decimal(5,2)");

                    b.Property<long>("Start")
                        .HasColumnType("bigint");

                    b.Property<string>("Timezone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AtivoId");

                    b.ToTable("TradingPeriod");
                });

            modelBuilder.Entity("YahooFinance.Domain.Entities.AssetVariation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("Dia")
                        .HasColumnType("int");

                    b.Property<double>("PercentualDesdePrimeiraData")
                        .HasColumnType("float");

                    b.Property<double>("Porcentagem")
                        .HasColumnType("float");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.ToTable("AssetVariations");
                });

            modelBuilder.Entity("YahooFinance.Domain.Entities.Ativo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("ChartPreviousClose")
                        .HasColumnType("float");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CurrentTradingPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("DataGranularity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExchangeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExchangeTimezoneName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FirstTradeDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Gmtoffset")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("InstrumentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PreviousClose")
                        .HasColumnType("float");

                    b.Property<int>("PriceHint")
                        .HasColumnType("int");

                    b.Property<string>("Range")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("RegularMarketPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("RegularMarketTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Scale")
                        .HasColumnType("int");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Timezone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CurrentTradingPeriodId");

                    b.ToTable("Ativos");
                });

            modelBuilder.Entity("YahooFinance.Domain.Entities.AtivoFull", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AtivoId")
                        .HasColumnType("int");

                    b.Property<int>("IndicatorsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AtivoId");

                    b.HasIndex("IndicatorsId");

                    b.ToTable("AtivoFull");
                });

            modelBuilder.Entity("YahooFinance.Domain.Entities.CurrentTradingPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("PreId")
                        .HasColumnType("int");

                    b.Property<int>("RegularId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("PreId");

                    b.HasIndex("RegularId");

                    b.ToTable("CurrentTradingPeriods");
                });

            modelBuilder.Entity("YahooFinance.Domain.Entities.Indicators", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Indicators");
                });

            modelBuilder.Entity("YahooFinance.Domain.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("End")
                        .HasColumnType("int");

                    b.Property<int>("Gmtoffset")
                        .HasColumnType("int");

                    b.Property<int>("Start")
                        .HasColumnType("int");

                    b.Property<string>("Timezone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("YahooFinance.Domain.Entities.Pre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("End")
                        .HasColumnType("int");

                    b.Property<int>("Gmtoffset")
                        .HasColumnType("int");

                    b.Property<int>("Start")
                        .HasColumnType("int");

                    b.Property<string>("Timezone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pres");
                });

            modelBuilder.Entity("YahooFinance.Domain.Entities.Quote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Close")
                        .HasColumnType("float");

                    b.Property<double>("High")
                        .HasColumnType("float");

                    b.Property<int>("IndicatorsId")
                        .HasColumnType("int");

                    b.Property<double>("Low")
                        .HasColumnType("float");

                    b.Property<double>("Open")
                        .HasColumnType("float");

                    b.Property<int>("Volume")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IndicatorsId");

                    b.ToTable("Quotes");
                });

            modelBuilder.Entity("YahooFinance.Domain.Entities.Regular", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("End")
                        .HasColumnType("int");

                    b.Property<int>("Gmtoffset")
                        .HasColumnType("int");

                    b.Property<int>("Start")
                        .HasColumnType("int");

                    b.Property<string>("Timezone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regulars");
                });

            modelBuilder.Entity("YahooFinance.Domain.Entities.ValidRanges", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AtivoId")
                        .HasColumnType("int");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AtivoId");

                    b.ToTable("ValidRanges");
                });

            modelBuilder.Entity("Domain.Entities.TradingPeriod", b =>
                {
                    b.HasOne("YahooFinance.Domain.Entities.Ativo", null)
                        .WithMany("TradingPeriods")
                        .HasForeignKey("AtivoId");
                });

            modelBuilder.Entity("YahooFinance.Domain.Entities.Ativo", b =>
                {
                    b.HasOne("YahooFinance.Domain.Entities.CurrentTradingPeriod", "CurrentTradingPeriod")
                        .WithMany()
                        .HasForeignKey("CurrentTradingPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentTradingPeriod");
                });

            modelBuilder.Entity("YahooFinance.Domain.Entities.AtivoFull", b =>
                {
                    b.HasOne("YahooFinance.Domain.Entities.Ativo", "Ativo")
                        .WithMany()
                        .HasForeignKey("AtivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YahooFinance.Domain.Entities.Indicators", "Indicators")
                        .WithMany()
                        .HasForeignKey("IndicatorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ativo");

                    b.Navigation("Indicators");
                });

            modelBuilder.Entity("YahooFinance.Domain.Entities.CurrentTradingPeriod", b =>
                {
                    b.HasOne("YahooFinance.Domain.Entities.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YahooFinance.Domain.Entities.Pre", "Pre")
                        .WithMany()
                        .HasForeignKey("PreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YahooFinance.Domain.Entities.Regular", "Regular")
                        .WithMany()
                        .HasForeignKey("RegularId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Pre");

                    b.Navigation("Regular");
                });

            modelBuilder.Entity("YahooFinance.Domain.Entities.Quote", b =>
                {
                    b.HasOne("YahooFinance.Domain.Entities.Indicators", "Indicators")
                        .WithMany("Quote")
                        .HasForeignKey("IndicatorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Indicators");
                });

            modelBuilder.Entity("YahooFinance.Domain.Entities.ValidRanges", b =>
                {
                    b.HasOne("YahooFinance.Domain.Entities.Ativo", null)
                        .WithMany("ValidRanges")
                        .HasForeignKey("AtivoId");
                });

            modelBuilder.Entity("YahooFinance.Domain.Entities.Ativo", b =>
                {
                    b.Navigation("TradingPeriods");

                    b.Navigation("ValidRanges");
                });

            modelBuilder.Entity("YahooFinance.Domain.Entities.Indicators", b =>
                {
                    b.Navigation("Quote");
                });
#pragma warning restore 612, 618
        }
    }
}
